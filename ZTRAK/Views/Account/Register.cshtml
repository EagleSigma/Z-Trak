@model ZTRAK.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}


<p style="padding-top: 10px;"><span style="font-size: large">@ViewBag.Title - </span> <span style="font-size: medium;">Create a new account.</span></p>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()


    <div class="form-group">
        @*@Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-fw fa-user"></i></span>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg", placeholder = "User Name" })
            </div>
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
    </div>
    
    <div class="form-group">
        @*@Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-fw fa-user"></i></span>
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-lg", placeholder = "First Name" })
            </div>
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
    </div>
    
    <div class="form-group">
        @*@Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-fw fa-user"></i></span>
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control input-lg", placeholder = "Last Name" })
            </div>
            @Html.ValidationMessageFor(m => m.LastName)
        </div>
    </div>
    
    


    <div class="form-group">
        @*@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw fa-envelope"></i></span>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-lg", placeholder = "Email" })
            </div>
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>


    <div class="form-group">
        @*@Html.LabelFor(m => m.CellNumber, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-phone"></i></span>
                @Html.TextBoxFor(m => m.CellNumber, new { @class = "form-control input-lg", placeholder = "Cell Number" })
            </div>
            @Html.ValidationMessageFor(m => m.CellNumber)
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(m => m.CellCarrier, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-rss"></i></span>
                @Html.DropDownList("CellCarrier", (SelectList)ViewBag.MobileCarriers, "Mobile Provider",
                    new
                    { //anonymous type
                        @class = "form-control input-lg"
                    })
                </div>
                @Html.ValidationMessageFor(m => m.CellCarrier)
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(m => m.TeamName, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw  fa-group"></i></span>
                @Html.DropDownList("TeamName", (SelectList)ViewBag.TeamList, "Team Name",
                    new
                    { //anonymous type
                        @class = "form-control  input-lg"
                    })
                </div>
            @Html.ValidationMessageFor(m => m.TeamName)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw fa-male"></i></span>
                @Html.DropDownList("RoleName", (SelectList)ViewBag.RolesList, "Role Name",
                    new
                    { //anonymous type
                        @class = "form-control input-lg"
                    })
                </div>
            @Html.ValidationMessageFor(m => m.RoleName)
        </div>
    </div>



    <div class="form-group">
        @*@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x fa-fw fa-key" ></i></span>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", placeholder = "Password" })
            </div>
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x fa-eye fa-fw"></i></span>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-lg", placeholder = "Confirm Password" })
            </div>
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>
    </div>


    // Unchecked this field if you need a multiple selection box in the page - also uncheck the view model

    @*<div class="form-group">
            @Html.LabelFor(m => m.RolesList, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
            @Html.ListBoxFor(m => m.SelectedRolesValues, Model.RolesList)
            </div>
        </div>*@
    
    <div class="form-group">
       <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x fa-fw fa-pencil"></i></span>
                @Html.PasswordFor(m => m.PinCode, new { @class = "form-control input-lg", placeholder = "Pin Code" })
            </div>
           @Html.ValidationMessageFor(m => m.PinCode)
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(m => m.RegistrationCode, new { @class = "col-md-2 control-label" })*@
        <div class="col-md-10">
            <div class="input-group merged">
                <span class="input-group-addon"><i class="fa fa-2x  fa-fw fa-pencil-square-o"></i></span>
                @Html.PasswordFor(m => m.RegistrationCode, new { @class = "form-control input-lg", placeholder = "Registration Code" })
            </div>
            @Html.ValidationMessageFor(m => m.RegistrationCode)
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            @*<input type="submit" class="btn-primary btn" value="Register" />*@
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-2x fa-user" style="vertical-align:middle"></i> Register
            </button>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
                @*@Html.ValidationSummary()*@
                @*@Html.Partial("_ValidationSummary", @ViewData.ModelState)*@
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/iOS")

}
